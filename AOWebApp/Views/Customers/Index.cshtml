@model AOWebApp.ViewModel.CustomerSearchViewModel;

@{
    ViewData["Title"] = "Index";
}
@functions{
    public string isSelected(string value, string comp)
    {
        string selected = null;
        if (value == comp)
        {
            selected = "selected";
        }
        return selected;
    }
}

<h1 class="h2.Bootstrap heading text-center">Customers</h1>

<p>
    <a asp-action="Create" class="btn btn-outline-primary mb-3">Create New</a>
</p>
<br />
<form method="post">
    <div class="input-group mb-3">
        <span class="input-group-text" id="inputGroup-sizing-default">Customer Search</span>
        <select asp-for="Suburb" asp-items="Model.SuburbList" class="form-control">
            <option value="">All suburbs...</option>
        </select>
        <input asp-for="SearchText" class="form-control" title="Search by first or last name. Max 100 chars." maxlength="100" placeholder="Type here..."
               aria-label="Customer search input" aria-describedby="inputGroup-sizing-default" />
    </div>

    <input type="submit" class="btn btn-outline-primary" value="Submit" />
    <a asp-action="Index" class="btn btn-outline-danger">Reset</a>
</form>
<br />
<br />

@{
    bool isSearch = false;
    int count = 0;
    if (Model != null)
    {
        isSearch = !string.IsNullOrWhiteSpace(Model.SearchText) || !string.IsNullOrWhiteSpace(Model.Suburb);
        if (Model.CustomerList != null)
        {
            count = Model.CustomerList.Count;
        }
    }
}

@if (!isSearch)
{
    <p>Please enter a customer name or select a suburb to search.</p>
}

@if (isSearch && count > 0)
{
    <p>
        Your search returned @count matching customer@(count != 1 ? "s" : "")
    </p>
}
else if (isSearch && count <= 0)
{
    <p>Showing @count customers</p>
    <h5 class="text-danger">Ooops, no customers matched your search..</h5>
}

@if (isSearch)
{
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(m => m.CustomerList.FirstOrDefault().FullName)
            </th>
            <th>
                Email
            </th>
            <th>
                @Html.DisplayNameFor(m => m.CustomerList.FirstOrDefault().ContactNumber)
            </th>
            <th>
                Address
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.CustomerList) {
        <tr>
            <td>
                @item.FullName
            </td>
            <td>
                @item.Email
            </td>
            <td>
                @Html.Raw(item.ContactNumber)
            </td>
            <td>
                @if(item.Address != null){
                    <span>@item.Address.AddressLine, @item.Address.Suburb, @item.Address.Postcode, @item.Address.Region</span>
                }
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.CustomerId">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.CustomerId">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.CustomerId">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
}
